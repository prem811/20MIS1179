import React, { useState, useEffect } from 'react';
import { Container, Row, Col, Card, Button, Form } from 'react-bootstrap'; 
import './App.css';

const App = () => {
  const [products, setProducts] = useState([]);
  const [filteredProducts, setFilteredProducts] = useState([]);
  const [filterOptions, setFilterOptions] = useState({
    category: 'Mouse',
    company: 'SNP',
    sortBy: 'price',
  });

  useEffect(() => {

    fetchProducts();
  }, []);

  const fetchProducts = async () => {
    try {
      
      const response = await fetch('https://20.244.56.144/test/companies/:companyname/categories/:categoryname/products?top=n&minprice=p&maxPrice=q');
      const data = await response.json();
      setProducts(data);
      setFilteredProducts(data);
    } catch (error) {
      console.error('Error fetching products:', error);
    }
  };

  const handleFilterChange = (e) => {
    const { name, value } = e.target;
    setFilterOptions({ ...filterOptions, [name]: value });
  };

  const applyFilters = () => {
    let filtered = [...products];

    if (filterOptions.category) {
      filtered = filtered.filter(product => product.category === filterOptions.category);
    }

    if (filterOptions.company) {
      filtered = filtered.filter(product => product.company === filterOptions.company);
    }

    filtered.sort((a, b) => {
      if (filterOptions.sortBy === 'price') {
        return a.price - b.price;
      } else if (filterOptions.sortBy === 'rating') {
        return b.rating - a.rating;
      } else {

        return a.price - b.price;
      }
    });

    setFilteredProducts(filtered);
  };

  return (
    <Container className="mt-5">
      <h1 className="mb-4">Top Products</h1>
      <Form className="mb-4">
        <Form.Row>
          <Form.Group as={Col} xs={12} md={4}>
            <Form.Label>Category</Form.Label>
            <Form.Control name="category" as="select" value={filterOptions.category} onChange={handleFilterChange}>
              <option value="All">All</option>
              <option value="electronics">Electronics</option>
              <option value="clothing">Clothing</option>
              <option value="home">Home</option>
            </Form.Control>
          </Form.Group>
          <Form.Group as={Col} xs={12} md={4}>
            <Form.Label>Company</Form.Label>
            <Form.Control name="company" as="select" value={filterOptions.company} onChange={handleFilterChange}>
              <option value="">All</option>
              <option value="company1">Company 1</option>
              <option value="company2">Company 2</option>
              <option value="company3">Company 3</option>
            </Form.Control>
          </Form.Group>
          <Form.Group as={Col} xs={12} md={4}>
            <Form.Label>Sort By</Form.Label>
            <Form.Control name="sortBy" as="select" value={filterOptions.sortBy} onChange={handleFilterChange}>
              <option value="price">Price</option>
              <option value="rating">Rating</option>
            </Form.Control>
          </Form.Group>
        </Form.Row>
        <Button variant="primary" onClick={applyFilters}>Apply Filters</Button>
      </Form>
      <Row>
        {filteredProducts.map(product => (
          <Col key={product.id} xs={12} md={4}>
            <Card className="mb-4">
              <Card.Img variant="top" src={product.image} />
              <Card.Body>
                <Card.Title>{product.name}</Card.Title>
                <Card.Text>
                  <strong>Company:</strong> {product.company}
                  <br />
                  <strong>Category:</strong> {product.category}
                  <br />
                  <strong>Price:</strong> {product.price}
                  <br />
                  <strong>Rating:</strong> {product.rating}
                  <br />
                  <strong>Discount:</strong> {product.discount}
                  <br />
                  <strong>Availability:</strong> {product.availability}
                </Card.Text>
                <Button variant="primary">View Details</Button>
              </Card.Body>
            </Card>
          </Col>
        ))}
      </Row>
    </Container>
  );
};

export default App;
